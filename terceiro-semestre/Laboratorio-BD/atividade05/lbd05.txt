create database biblioteca;
use biblioteca;

create table categorialeitor (
    codigo int primary key,
    nome varchar(100),
    dias int default 7
);

create table categoriaobra (
    codigo int primary key,
    nome varchar(100)
);

create table funcionario (
    codigo bigint primary key auto_increment,
    nome varchar(100) not null,
    documento varchar(30) not null,
    email varchar(100) not null unique,
    telefone varchar(30),
    cidade varchar(100),
    logradouro varchar(100),
    cep char(8),
    senha varchar(100)
);

create table leitor (
    codigo bigint primary key auto_increment,
    nome varchar(100) not null,
    documento varchar(30) not null,
    email varchar(100) not null unique,
    telefone varchar(30),
    cidade varchar(100),
    logradouro varchar(100),
    cep char(8),
    senha varchar(100),
    categorialeitor int
);

create table obra (
    codigo bigint primary key auto_increment,
    titulo varchar(100) not null,
    autor varchar(100),
    isbn varchar(30) unique,
    editora varchar(100),
    ano char(4),
    sinopse text,
    palavraschave varchar(100),
    categoriaobra int
);

create table copia (
    codigo bigint primary key auto_increment,
    codigoobra bigint, 
    descritivo varchar(1000),
    disponivel varchar(10) default 'não'
);

create table reserva (
    codigo bigint primary key auto_increment,
    datareserva date,
    dataretirada date,
    dataprevista date,
    leitor bigint,
    obra bigint
);

create table emprestimo (
    codigo bigint primary key auto_increment,
    dataemprestimo date,
    dataprevista date, 
    datadevolucao date,
    multa decimal(10,2) default 0,
    leitor bigint,
    copia bigint,
    funcionario bigint
);

alter table leitor add foreign key (categorialeitor) references categorialeitor(codigo);
alter table obra add foreign key (categoriaobra) references categoriaobra(codigo);
alter table copia add foreign key (codigoobra) references obra(codigo);
alter table reserva add foreign key (leitor) references leitor(codigo);
alter table reserva add foreign key (obra) references obra(codigo);
alter table emprestimo add foreign key (leitor) references leitor(codigo);
alter table emprestimo add foreign key (copia) references copia(codigo);
alter table emprestimo add foreign key (funcionario) references funcionario(codigo);

start transaction;

insert into categorialeitor (codigo, nome, dias) values 
(1, 'Aluno', 3),
(2, 'Professor', 4),
(3, 'Visitante', 5);

insert into categoriaobra (codigo, nome) values 
(1, 'Romance'),
(33, 'Mangá de ação'),
(34, 'Mangá coreano de ação');

insert into funcionario (codigo, nome, documento, email, telefone, cidade, logradouro, cep, senha) values 
(1, 'Mateus Balduíno', '012.345.678-99', 'mateusficticio@email.com', '11912344321', 'São Paulo', 'Rua Ficticia, 1', '01234000', '123456'),
(2, 'Vitor Dahora', '333.345.678-99', 'vitorficticio@email.com', '11912341111', 'São Paulo', 'Rua Ficticia, 2', '01234000', '123456'),
(3, 'Gabriel Ribeiro', '012.444.678-99', 'gabrielficticio@email.com', '11977774321', 'São Paulo', 'Rua Ficticia, 8', '01234001', '123456');

insert into leitor (codigo, nome, documento, email, telefone, cidade, logradouro, cep, senha, categorialeitor) values 
(1, 'Luccas Miguel', '012.345.876-99', 'luccasficticio@email.com', '11912347721', 'São Paulo', 'Rua Ficticia, 6', '01234000', '123456', 1),
(2, 'Miguel Henrique', '111.345.678-99', 'miguelficticio@email.com', '11912888321', 'São Paulo', 'Rua Ficticia, 22', '01234001', '123456', 2),
(3, 'Pedro Dantas', '012.345.222-99', 'pedroficticio@email.com', '11977884321', 'São Paulo', 'Rua Ficticia, 23', '01234001', '123456', 3);

insert into obra (codigo, titulo, autor, isbn, editora, ano, sinopse, palavraschave, categoriaobra) values 
(1, 'Crepusculo', 'random', '34588-9888C', 'Crepusculo FC', '2009', 'insira texto', 'vampiro', 1),
(2, 'Solo Levelling', 'random', '34588-9111C', 'insira texto', '2020', 'insira texto', 'videogames', 34),
(3, 'Steins;Gate', 'random', '36699-1111J', 'random', '2020', 'insira texto', 'vampiro', 1);

insert into copia (codigo, codigoobra, descritivo, disponivel) values 
(1, 1, 'Primeira edição', 'sim'),
(2, 2, 'Edição de colecionador', 'não'),
(3, 3, 'Capa dura', 'sim');

insert into reserva (codigo, datareserva, leitor, obra) values 
(1, '2025-03-10', 1, 1),
(2, '2025-03-12', 2, 2),
(3, '2025-03-15', 3, 3);

insert into emprestimo (codigo, dataemprestimo, dataprevista, leitor, copia, funcionario, multa) values 
(1, '2025-03-10', '2025-04-01', 1, 1, 1, 40.00),
(2, '2025-03-12', '2025-04-05', 2, 2, 2, 55.00),
(3, '2025-03-15', '2025-04-10', 3, 3, 3, 30.00);

commit;

delete from funcionario where nome = 'Vitor Dahora';
delete from leitor where nome = 'Pedro Dantas';
delete from categorialeitor where codigo = 5;
delete from categoriaobra where codigo = 34;
delete from obra where titulo = 'Steins;Gate';
delete from copia where codigo = 2;
delete from reserva where codigo = 3;
delete from emprestimo where codigo = 3;

update categorialeitor set dias = dias + 3;
update emprestimo set multa = 0 where multa < 50;

select * from leitor
where categorialeitor = '1' and cidade = 'São Paulo'
order by email;

select * from funcionario
where cidade != 'São Paulo'
order by nome;

select titulo, autor
from obra
order by titulo;

select SUM(multa), COUNT(codigo)
from emprestimo;

select funcionario, COUNT(*) as total_emprestimos
from emprestimo 
group by funcionario;

select leitor, COUNT(*) as total_reservas 
from reserva
group by leitor;